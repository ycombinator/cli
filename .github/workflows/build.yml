name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.action != 'labeled'
    steps:
    - uses: actions/checkout@v2

    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Add Go environment variables
      env:
        GOPATH: "/home/runner/go"
      run: |
        echo "GOPATH=${{ env.GOPATH }}" >> $GITHUB_ENV
        echo "GOMODCACHE=${{ env.GOPATH }}/pkg/mod" >> $GITHUB_ENV
        echo "GOBIN=${{ env.GOPATH }}/bin" >> $GITHUB_ENV

    - name: Print Environment
      run: env

    - name: Cache module dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-go-modules
      with:
        path: "${{ env.GOMODCACHE }}"
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Tools
      uses: actions/cache@v2
      env:
        cache-name: cache-tool-binaries
      with:
        path: ${{ env.GOBIN }}
        key: ${{ runner.os }}-go-tools-${{ hashFiles('.bingo/*.mod') }}

    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}

    - name: Build
      run: go build .

    - name: Check/Lint repository
      run: make check

    - name: Run tests
      env:
        TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
      run: make test

  on-release-start:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 2
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Post start to Slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          channel-id: '#cd-activity'
          payload: |
            {
              "text": "Publication of Xata CLI by ${{ github.actor }} started",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":butterfly: *Publication of Xata CLI by ${{ github.actor }} started* :butterfly:"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*More info:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit URL:* ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # We want to release all merges to main for now:
  release:
    needs: on-release-start
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - run: git config --global user.email "github@xata.io"
    - run: git config --global user.name "Github actions"

    - name: Release new version
      run: |
        echo y | ./scripts/bump_version.sh

  # Tags created by build workflow don't trigger, call goreleaser:
  publish-release:
    needs: [build, release]
    uses: xataio/cli/.github/workflows/goreleaser.yml@main

  on-failure:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [publish-release]
    if: github.ref == 'refs/heads/main' && failure()
    steps:
      - name: Post failure to Slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          channel-id: '#cd-activity'
          payload: |
            {
              "text": "Publication of Xata CLI failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: @here *Publication of Xata CLI failed when triggered by ${{ github.actor }}* :red_circle:"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*More info:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit URL:* ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  on-success:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [publish-release]
    steps:
      - name: Post success to Slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          channel-id: '#cd-activity'
          payload: |
            {
              "text": "Publication of Xata CLI was successful",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":white_check_mark::rocket: *Publication of Xata CLI by ${{ github.actor }} was successful* :white_check_mark::rocket:"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*More info:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit URL:* ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
